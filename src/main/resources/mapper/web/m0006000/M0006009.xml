<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--사용자-메뉴 권한 관리-->
<mapper namespace="com.dowinsys.mes.web.m0006000.mapper.M0006009Mapper">
    <select id="selectMenuTabList" resultType="com.dowinsys.mes.common.auth.SysResource">
    with mt as (
		select
			a.prod_category 
			,a.sys_resource_id 
			,a.upper_sys_resource_id
			,a.description
			,cast(a.SYS_RESOURCE_NAME as nvarchar(max)) as full_path
			,a.SYS_RESOURCE_NAME 
			,a.seq 	
			,1 as level		
			,a.sys_resource_type_code_id			
			,cast(FORMAT(a.seq , 'D4')as nvarchar(max)) as full_seq
			,a.url
			,a.del_yn
			,a.sys_resource_id as org_sys_resource_id
		from DW_CM_SYS_RESOURCE a 	
		where a.upper_sys_resource_id = 'ROOT_MENU'
		and a.prod_category = #{prodCategory} 	
		and a.del_yn = 'N'
		union all
		select
			a.prod_category 
			,a.sys_resource_id
			,a.upper_sys_resource_id
			,a.description
			,cast(c.full_path + ' > ' + a.SYS_RESOURCE_NAME as nvarchar(max)) as full_path
			,a.SYS_RESOURCE_NAME
			,a.seq 
			,c.level + 1 as level 
			,a.sys_resource_type_code_id				
			,cast(c.full_seq + ' > ' + cast(FORMAT(a.seq , 'D4') as nvarchar(max)) as nvarchar(max)) as full_seq
			,a.url
			,a.del_yn
			,a.sys_resource_id as org_sys_resource_id
		from DW_CM_SYS_RESOURCE a	
		inner join mt c on a.upper_sys_resource_id = c.sys_resource_id
		where a.prod_category = #{prodCategory}
		and a.del_yn = 'N' 		
	)
	select *
	from mt
	order by full_seq
    </select>
    
    <select id="selectRoleList" resultType="com.dowinsys.mes.common.auth.Role">
    select 
		ROLE_ID
		,ROLE_NAME
		,DESCRIPTION
		,INIT_DT
		,INIT_USER
		,MODI_DT
		,MODI_USER
	from DW_CM_ROLE
	where del_yn = 'N'
	order by role_name
    </select>
    
    <select id="selectUserList" resultType="CamelMap">
	select 
		USER_ID
		,password
		,user_name
		,dept_name
		,dept_code
		,position_name
		,position_code
		,UTG
		,ITG
		,INIT_DT
		,INIT_USER
		,MODI_DT
		,MODI_USER
		,DEL_YN
	from dw_cm_user
	where DEL_YN = 'N'
	order by dept_name,user_name
	</select> 
	<select id="selectRoleMenuTabList" parameterType="Map" resultType="com.dowinsys.mes.common.auth.SysResource">
	with role_sys_resc as (
		select
			b.UPPER_SYS_RESOURCE_ID
			,b.SYS_RESOURCE_ID
		from DW_CM_ROLE a
		left outer join dw_cm_role_sys_resource b on (a.ROLE_ID = b.ROLE_ID)
		where a.role_id = #{roleId}
		and a.del_yn = 'N'
		and b.prod_category = #{prodCategory} 
	) 
	,mt as (
		select
			a.prod_category 
			,a.sys_resource_id 
			,a.upper_sys_resource_id
			,a.description
			,cast(a.SYS_RESOURCE_NAME as nvarchar(max)) as full_path
			,a.SYS_RESOURCE_NAME 
			,a.seq 	
			,1 as level		
			,a.sys_resource_type_code_id			
			,cast(a.seq as nvarchar(max)) as full_seq
			,a.url
		from DW_CM_SYS_RESOURCE a
		where a.upper_sys_resource_id = 'ROOT_MENU'
		and a.prod_category = #{prodCategory} 	
		union all
		select
			a.prod_category 
			,a.sys_resource_id
			,a.upper_sys_resource_id
			,a.description
			,cast(c.full_path + ' > ' + a.SYS_RESOURCE_NAME as nvarchar(max)) as full_path
			,a.SYS_RESOURCE_NAME
			,a.seq 
			,c.level + 1 as level 
			,a.sys_resource_type_code_id				
			,cast(c.full_seq + ' > ' + cast(a.seq as nvarchar(max)) as nvarchar(max)) as full_seq
			,a.url
		from DW_CM_SYS_RESOURCE a	
		inner join mt c on a.upper_sys_resource_id = c.sys_resource_id
		where a.prod_category = #{prodCategory} 		
	)
	select 
		a.*
		,case when b.sys_resource_id is not null then 'Y' else 'N' end HAS_AUTH
	from mt a
	left outer join role_sys_resc b on (a.sys_resource_id = b.sys_resource_id and a.UPPER_SYS_RESOURCE_ID = b.UPPER_SYS_RESOURCE_ID)
	order by full_seq
	</select>  
	
	<delete id="deleteRoleSysResc" parameterType="String">
	delete
	from dw_cm_role_sys_resource
	where role_id = #{roleId}
	and PROD_CATEGORY = #{prodCategory}
	</delete>
	<insert id="insertRoleSysResc" parameterType="Map">
	INSERT INTO dw_cm_role_sys_resource (
		ROLE_ID
		,PROD_CATEGORY
		,UPPER_SYS_RESOURCE_ID
		,SYS_RESOURCE_ID
		,SYS_RESOURCE_TYPE_CODE_ID
		,INIT_DT
		,INIT_USER
	) VALUES (
		#{roleId}
		,#{prodCategory}
		,#{upperSysResourceId}
		,#{sysResourceId}
		,#{sysResourceTypeCodeId}
		,GETDATE()
		,#{userId}
	)
	</insert>
	<insert id="insertCmUser" parameterType="Map">
	INSERT INTO dw_cm_user (
		USER_ID
		,user_name
		,password
		,dept_name
		,dept_code
		,position_name
		,position_code
		,UTG
		,ITG
		,INIT_DT
		,INIT_USER
		,MODI_DT
		,MODI_USER
		,DEL_YN
	) VALUES (
		#{userId}
		,#{userName}
		,#{password}
		,#{deptName}
		,#{deptCode}
		,#{positionName}
		,#{positionCode}
		,#{utg}
		,#{itg}
		,getdate()
		,#{dowInsysUserId}
		,NULL
		,NULL
		,'N'
	)
	</insert>
	<update id="updateCmUser" parameterType="Map">
	UPDATE DW_CM_USER
	SET user_name=#{userName}
		, password=#{password}
		, dept_name=#{deptName}
		, dept_code=#{deptCode}
		, position_name=#{positionName}
		, position_code=#{positionCode}
		, UTG=#{utg}
		, ITG=#{itg}
		, MODI_DT=getdate()
		, MODI_USER=#{dowInsysUserId}		
	WHERE USER_ID=#{userId}
	</update>
	<update id="deleteCmUser" parameterType="Map">
	UPDATE DW_CM_USER
	SET DEL_YN = 'Y'
	WHERE USER_ID=#{userId}  
	</update>
	
	<insert id="insertCmSysResource" parameterType="Map">
	INSERT INTO DW_CM_SYS_RESOURCE (
		prod_category
		, SYS_RESOURCE_ID
		, SYS_RESOURCE_NAME
		, UPPER_SYS_RESOURCE_ID
		, SYS_RESOURCE_TYPE_CODE_ID
		, DESCRIPTION
		, SEQ
		, URL
		, INIT_DT
		, INIT_USER
		, DEL_YN
	) VALUES (
		#{prodCategory}
		,#{sysResourceId}
		, #{sysResourceName}
		, #{upperSysResourceId}
		, #{sysResourceTypeCodeId}
		, #{description}
		, #{seq}
		, #{url}
		, getdate()
		, #{dowInsysUserId}
		, 'N'
	)
	</insert>
	
	<update id="updateCmSysResource" parameterType="Map">
	UPDATE DW_CM_SYS_RESOURCE SET 		
		SYS_RESOURCE_ID = #{sysResourceId}
		,SYS_RESOURCE_NAME=#{sysResourceName}	
		, SYS_RESOURCE_TYPE_CODE_ID=#{sysResourceTypeCodeId}
		, DESCRIPTION=#{description}
		, SEQ=#{seq}
		, URL=#{url}
		, MODI_DT=getdate()
		, MODI_USER=#{dowInsysUserId}
	where prod_category = #{prodCategory}	
	and SYS_RESOURCE_ID = #{orgSysResourceId}
	and UPPER_SYS_RESOURCE_ID = #{upperSysResourceId}
	</update>
	
	<update id="deleteCmSysResource" parameterType="Map">
	UPDATE DW_CM_SYS_RESOURCE SET 		
		DEL_YN = 'Y'
		, MODI_DT=getdate()
		, MODI_USER=#{dowInsysUserId}
	where prod_category = #{prodCategory}
	and SYS_RESOURCE_ID = #{sysResourceId}
	and UPPER_SYS_RESOURCE_ID = #{upperSysResourceId}
	</update>
	
	<select id="selectRoleUserList" parameterType="Map" resultType="CamelMap">
	select
		a.role_id
		,a.user_id
		,b.dept_name 
		,b.user_name 
		,b.position_name 
		,b.position_code 
	from DW_CM_USER_ROLE a
	left outer join DW_CM_USER b on (a.USER_ID = b.USER_ID)
	where a.ROLE_ID = #{roleId}
	</select>
	
	<insert id="insertUserRole" parameterType="Map">
	INSERT INTO DW_CM_USER_ROLE (
		USER_ID,ROLE_ID,ROLE_NAME,INIT_DT,INIT_USER
	) VALUES (
		#{userId},#{roleId},#{roleName},getdate(),#{initUser}
	)
	</insert>
	
	<delete id="deleteUserRole" parameterType="Map">
	DELETE FROM DW_CM_USER_ROLE
	WHERE ROLE_ID = #{roleId}
	AND USER_ID = #{userId}
	</delete>
	
	<update id="deleteRole" parameterType="Map">
	UPDATE DW_CM_ROLE
	SET 
		DEL_YN = 'Y'
		,MODI_USER = #{userId}
		,MODI_DT = GETDATE() 
	WHERE ROLE_ID = #{roleId}
	</update>
	
	<select id="checkRoleId" parameterType="Map" resultType="String">
	select case when count(1) > 0 then #{roleId} + '는 사용 할 수 없는 Role Id 입니다.' else 'OK' end
	from DW_CM_ROLE
	where role_id = #{roleId}
	</select>
	
	<insert id="insertRole" parameterType="Map">
	INSERT INTO DW_CM_ROLE (
		ROLE_ID, ROLE_NAME, DESCRIPTION, INIT_DT, INIT_USER, MODI_DT, MODI_USER, DEL_YN
	) VALUES (
		#{roleId}, #{roleName}, #{description}, getdate(), #{userId}, NULL, NULL, 'N'
	)
	</insert>
	
	<update id="updateRole" parameterType="Map">
	UPDATE DW_CM_ROLE
	SET 
		ROLE_NAME = #{roleName}
		,DESCRIPTION = #{description}
		,MODI_DT = getdate()
		,MODI_USER = #{userId}		
	WHERE ROLE_ID = #{roleId}
	</update>
	
</mapper>