<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dowinsys.mes.web.m0001000.mapper.M0001002Mapper">

	<select id="getResinInfo" resultType="CamelMap">
		SELECT code
			 , code_name
			 , etc1
			 , etc2
		  FROM dw_common_code
		 WHERE maj_code = '78'
		 order by sort_order
	</select>
	
	<select id="dupMaterialId" resultType="int">
		SELECT count(1)
		  FROM dw_sub_mat_resin_in
		 WHERE material_id = #{materialId}
	</select>
	
	<select id="getUnitInfo" resultType="CamelMap">
		SELECT unit_code
			 , unit
		  FROM dw_mat_category
		 WHERE mat_category_code = '30'
		   AND mat_type_code = 'RESIN'
	</select>
	
	<select id="checkDupResinId" resultType="map">
		SELECT material_id
		  FROM dw_sub_mat_resin_in
		 WHERE material_id IN
		<foreach item="item" collection="vo" open="(" separator="," close=")" >
			#{item.materialId}
		</foreach>
	</select>
	
	<select id="checkUseInData" resultType="Map">
		select COALESCE(STRING_AGG(material_id, '/'), 'NoData') AS materialId
		from dw_sub_mat_resin_in a
		where upper(a.material_id) in
		<foreach item="item" collection="vo" open="(" separator="," close=")" >
			upper(#{item.materialId})
		</foreach>
		and a.use_yn = 'Y'
	</select>		
	
	<select id="getSubMatResinInList" resultType="CamelMap">
	select 	material_id         
		, mat_type_code       
		, sub_mat_type_code   
		, in_date             
		, in_time             
		, unit                
		, in_qty              
		, use_qty             
		, remain_qty          
		, use_yn              
		, worker_id           
		, worker_name         
		, make_date           
		, make_elapse_days    
		, store_valid_days    
		, store_days
		, case when store_days > store_valid_days then 'Y' 
		       else 'N' 
		  end store_valid_pass_yn
		, comments       
		, out_comments     
		, create_date         
		, create_user  
		, editable
	from 
	( 
		SELECT I.material_id
			 , I.mat_type_code
			 , I.sub_mat_type_code
			 , I.in_date
			 , I.in_time
			 , I.unit
			 , I.in_qty
			 , I.use_qty
			 , I.remain_qty
			 , I.use_yn
			 , I.worker_id
			 , I.worker_name
			 , I.make_date
			 , I.make_elapse_days
			 , I.store_valid_days
			 , I.comments
			 , O.comments as out_comments
			 , I.create_date
			 , I.create_user
			 , CASE WHEN O.store_days IS NOT NULL THEN O.store_days
			 		ELSE DATEDIFF(day, I.in_date, DATEADD(HOUR, 9, GETUTCDATE()))
			   END store_days
			 , case when isnull(b.close_yn,'N')  = 'N' and I.use_yn = 'N' then 'Y'
			 	    else 'N'
			   end as editable			   
		  FROM dw_sub_mat_resin_in I
		  LEFT OUTER JOIN dw_sub_mat_resin_out O
		    ON O.material_id = I.material_id
		  left outer join ( select * from dw_mat_close_info where mat_category_code ='30' and mat_type_code='RESIN' ) b 
		  on ( I.in_date = b.stock_date )		    
		 WHERE 1 = 1
		<choose>
			<when test="searchMaterialId != null and searchMaterialId.trim() != ''">
				and I.material_id = #{searchMaterialId}
			</when>
			<otherwise>
				   and I.in_date BETWEEN #{stDate} AND #{edDate}
				 <if test="subMatTypeCode != null and subMatTypeCode.trim() != ''" >
				   and I.sub_mat_type_code = #{subMatTypeCode}
				 </if>
			</otherwise>			
		</choose> 
	  ) A 
	  where 1 = 1
	  <if test="storeValidPassYn != null and storeValidPassYn.trim() != '' and searchMaterialId != null and searchMaterialId.trim() != ''" >
		   and ( ( #{storeValidPassYn} = 'Y' and  store_days <![CDATA[ > ]]> store_valid_days ) or  
	     		 ( #{storeValidPassYn} = 'N' and  store_days <![CDATA[ <= ]]> store_valid_days ) )
	   </if>  
	  ORDER BY in_date desc, in_time desc, material_id
	</select>
	
	<insert id="insertSubMatResinIn">
		INSERT INTO dw_sub_mat_resin_in
		(
			   material_id
			 , mat_type_code
			 , sub_mat_type_code
			 , in_date
			 , in_time
			 , unit
			 , in_qty
			 , use_qty
			 , remain_qty
			 , use_yn
			 , worker_id
			 , worker_name
			 , make_date
			 , make_elapse_days
			 , store_valid_days
			 , comments
			 , create_date
			 , create_user
		)
		VALUES
		(
			   #{materialId}
			 , #{matTypeCode}
			 , #{subMatTypeCode}
			 , #{inDate}
			 , #{inTime}
			 , #{unit}
			 , #{inQty}
			 , 0
			 , #{inQty}
			 , #{useYn}
			 , #{workerId}
			 , #{workerName}
			 , #{makeDate}
			 , #{makeElapseDays}
			 , #{storeValidDays}
			 , #{comments}
			 , getdate()
			 , #{dowInsysUserId}
		)
	</insert>
	
	<delete id="deleteSubMatResinIn">
		DELETE FROM dw_sub_mat_resin_in
		 WHERE material_id = #{materialId}
	</delete>
	
	<update id="updateSubMatResinIn">
		UPDATE dw_sub_mat_resin_in
		   SET worker_name = #{workerName},
		   	   comments = #{comments}
		 WHERE material_id = #{materialId}
	</update>
	
	<select id="getSubMatResinInInfo" resultType="CamelMap">
		SELECT material_id
			 , sub_mat_type_code
			 , b.code_name as sub_mat_type_name
			 , unit
			 , remain_qty
			 , store_valid_days
			 , RIGHT('00' + CAST(DATEDIFF(HOUR, in_date+' '+in_time, GETDATE()) AS VARCHAR), 2) +':'+  RIGHT('00' +CAST(DATEDIFF(MINUTE, in_date+' '+in_time, GETDATE())%60 AS VARCHAR), 2) AS store_time
			 , DATEDIFF(day, in_date, DATEADD(HOUR, 9, GETUTCDATE())) AS store_days
			 , a.comments as in_comments
		  FROM dw_sub_mat_resin_in a 
		  left outer join ( select code, code_name from dw_common_code where maj_code='78' ) b 
		  on ( a.sub_mat_type_code = b.code )	
		 WHERE material_id = #{materialId}
	</select>
	
	<select id="getSubMatResinOutList" resultType="CamelMap">
		SELECT O.material_id
			 , O.mat_type_code
			 , O.sub_mat_type_code
			 , O.work_date
			 , O.shift_code
			 , O.out_seq
			 , O.out_date
			 , O.out_time
			 , O.worker_name
			 , O.line
			 , O.step_code
			 , O.step_nm
			 , O.equip_no
			 , O.equip_nm
			 , O.tank
			 , O.unit
			 , isnull(O.out_qty,0) out_qty
			 , O.store_time
			 , O.store_days
			 , O.comments
			 , I.comments as in_comments
			 , isnull(I.remain_qty,0) remain_qty
			 , I.store_valid_days
			 , case when isnull(d.close_yn, 'N') = 'N' and 
			 		<![CDATA[
						( ( datepart(hour,getdate())   <  8
			              		and ( O.out_date = CONVERT(VARCHAR(8), getdate(), 112) ) or 
							  		( O.out_date = CONVERT(VARCHAR(8), DATEADD(DAY, -1, getdate()), 112) and convert(int,substring(O.out_time, 1,2))   >   19)
					     	) or 
					     	( datepart(hour,getdate())   >=   8 and O.out_date = CONVERT(VARCHAR(8), getdate(), 112) 
					     	) or
					     	I.remain_qty > 0   
					     )  ]]>
			        then 'Y'
			        else 'N'
			   end editable		 
		  FROM dw_sub_mat_resin_out O
		  JOIN dw_sub_mat_resin_in I
		    ON I.material_id = O.material_id
		  left outer join ( select * from dw_mat_close_info where mat_category_code ='30' and mat_type_code='RESIN' ) d 
		   on ( O.work_date = d.stock_date )				    
		 WHERE 1 = 1
		<choose>
			<when test="searchMaterialId != null and searchMaterialId.trim() != ''">
				and O.material_id = #{searchMaterialId}
			</when>
			<otherwise>
				   and O.work_date BETWEEN #{stWorkDate} AND #{edWorkDate} 
				<if test="shiftCode != null and shiftCode != ''" >
			  	   AND O.shift_code = #{shiftCode}
				</if>
				<if test="subMatTypeCode != null and subMatTypeCode != ''" >
			  	   AND O.sub_mat_type_code = #{subMatTypeCode}
				</if>
			</otherwise>			
		</choose> 
		 ORDER BY O.out_date desc, O.out_time desc, O.out_seq desc
	</select>
	
	<select id="checkRemainQty" resultType="map">
		select material_id
		from dw_sub_mat_resin_in a
		where upper(a.material_id) = upper(#{materialId})
		  and remain_qty - #{outQty} <![CDATA[ < 0 ]]>		
	</select>
	
	<insert id="insertSubMatResinOut">
		INSERT INTO dw_sub_mat_resin_out
		(
			   material_id
			 , mat_type_code
			 , sub_mat_type_code
			 , work_date
			 , shift_code
			 , out_seq
			 , out_date
			 , out_time
			 , worker_name
			 , line
			 , step_code
			 , step_nm
			 , equip_no
			 , equip_nm
			 , tank
			 , unit
			 , out_qty
			 , store_time
			 , store_days
			 , comments
			 , create_date
			 , create_user
		)
		SELECT
			   #{materialId}
			 , #{matTypeCode}
			 , #{subMatTypeCode}
			 , #{workDate}
			 , #{shiftCode}
			 , (select COALESCE(max(out_seq),0)+1 from dw_sub_mat_resin_out where work_date=#{workDate} and mat_type_code='RESIN' and shift_code = #{shiftCode})
			 , #{outDate}
			 , #{outTime}
			 , #{workerName}
			 , #{line}
			 , #{stepCode}
			 , #{stepNm}
			 , #{equipNo}
			 , #{equipNm}
			 , #{tank}
			 , #{unit}
			 , #{outQty}
			 , CAST(DATEDIFF(HOUR, in_date+' '+in_time, #{outDate}+' '+#{outTime}) AS VARCHAR)+':'+CAST(DATEDIFF(MINUTE, in_date+' '+in_time, #{outDate}+' '+#{outTime})%60 AS VARCHAR) AS store_time
			 , DATEDIFF(day, in_date, #{outDate}+' '+#{outTime}) AS store_days
			 , #{comments}
			 , getdate()
			 , #{dowInsysUserId}
		  FROM dw_sub_mat_resin_in
		 WHERE material_id = #{materialId}
	</insert>
	
	<update id="updateRemainQtyMinus">
		UPDATE dw_sub_mat_resin_in
		   SET use_qty = use_qty + #{outQty}
			 , remain_qty = remain_qty - #{outQty}
			 , use_yn = 'Y'
		 WHERE material_id = #{materialId}
	</update>
	
	<delete id="deleteSubMatResinOut">
		DELETE FROM dw_sub_mat_resin_out
		 WHERE material_id = #{materialId}
	</delete>
	
	<update id="updateRemainQtyPlus">
		UPDATE dw_sub_mat_resin_in
		   SET use_qty = use_qty - #{outQty}
			 , remain_qty = remain_qty + #{outQty}
			 , use_yn = case when ( use_qty - #{outQty} ) <![CDATA[ <=0 ]]> then 'N'
			           	     else 'Y'
			            end	
		 WHERE material_id = #{materialId}
	</update>
	
	<update id="updateSubMatResinOut">
		UPDATE dw_sub_mat_resin_out
		   SET worker_name = #{workerName}
		   	 , line = #{line}
			 , step_code = #{stepCode}
			 , step_nm = #{stepNm}
			 , equip_no = #{equipNo}
			 , equip_nm = #{equipNm}
			 , tank = #{tank}
			 , comments = #{comments}
		 WHERE material_id = #{materialId}
	</update>
	
	<!-- 재고실사 -->	
	<select id="selectMaxStockDate" resultType="String">
		SELECT CONVERT(VARCHAR(8), 
			       	   ISNULL(max(stock_date), CONVERT(VARCHAR(8), DATEADD(HOUR, 9, GETUTCDATE()), 112)), 
			       	   112) AS stockDate
		FROM dw_sub_mat_resin_id_stock
	</select>	
	
	<select id="selectConfirmN" resultType="int">
		select count(1) as cnt
		from dw_sub_mat_resin_id_stock
		where stock_date = #{stockDate}
		  and confirm_yn = 'N'
	</select>
	
	<select id="selectSubMatResinIdStock" resultType="CamelMap">
	select 	a.stock_date,
			a.material_id,
			a.mat_type_code,
			a.sub_mat_type_code,
			a.sub_mat_type_name,
			a.store_days,
			a.unit,
			a.prev_stock_qty,
			a.prev_real_stock_qty,
			a.in_qty,
			a.out_qty,
			a.stock_qty,
			a.real_stock_qty,
			a.diff_qty,	
			a.confirm_yn,
			a.charger_id,
			a.charger_name,
			a.comments,			
			a.editable
	from 
	( 
		SELECT 
			a.stock_date,
			a.material_id,
			a.mat_type_code,
			a.sub_mat_type_code,
			b.code_name as sub_mat_type_name,
			case when DATEDIFF(day, d.in_date, DATEADD(HOUR, 9, GETUTCDATE())) > b.store_valid_days and use_yn = 'N' then DATEDIFF(day, d.in_date, DATEADD(HOUR, 9, GETUTCDATE())) 
			   	 else 0
			end as store_days,			
			a.unit,
			a.prev_stock_qty,
			a.prev_real_stock_qty,
			a.in_qty,
			a.out_qty,
			a.stock_qty,
			a.real_stock_qty,
			a.diff_qty,	
			a.confirm_yn,
			a.charger_id,
			a.charger_name,
			a.comments,
			case when c.status = 'CLOSE' then 'N'
			     else 'Y'
			end as editable			
		FROM dw_sub_mat_resin_id_stock a 
		left outer join ( select code, code_name, cast(etc2 as int) as store_valid_days from dw_common_code where maj_code='78' ) b 
		on ( a.sub_mat_type_code = b.code )
		left outer join ( select * from dw_mat_close_info where mat_category_code='30' and mat_type_code='RESIN' ) c
		on ( a.stock_date = c.stock_date  )		
		left outer join dw_sub_mat_resin_in d 
		on ( a.material_id = d.material_id )
		where a.stock_date = #{stockDate}
		<if test="materialId != null and materialId.trim() != ''" >
		  and a.material_id = #{materialId}
		</if>		
		<if test="subMatType != null and subMatType.trim() != ''" >
		  and a.sub_mat_type_code = #{subMatType}
		</if>
		<if test="confirmYn != null and confirmYn.trim() != ''" >
		  and a.confirm_yn = #{confirmYn}
		</if>
		<if test="diffYn != null and diffYn.trim() != ''" >
          AND (
            	(#{diffYn} = 'N' AND a.diff_qty = 0) OR
            	(#{diffYn} = 'Y' AND a.diff_qty != 0)
           )
		</if>
		) a 
		where 1 = 1 
		<if test="storeValidPassYn != null and storeValidPassYn.trim() != ''" >
          AND (
            	(#{storeValidPassYn} = 'N' AND a.store_days <![CDATA[ <=  ]]> 0) OR 
            	(#{storeValidPassYn} = 'Y' AND a.store_days <![CDATA[ > 0]]>   )
           )
		</if>
		order by a.stock_date, a.material_id
	</select>
	
	<select id="createTempMatStockTable">
	    SELECT *
	      INTO ${tempTableName}
	      FROM dw_sub_mat_resin_id_stock
	     WHERE stock_date = #{stockDate}
	</select>	
	
	<delete id="dropTempMatStockTable">
		DROP TABLE ${tempTableName}
	</delete>		
	
	<delete id="deleteSubMatResinIdStock">
		delete from dw_sub_mat_resin_id_stock
		where stock_date = #{stockDate}
	</delete>
	
	<insert id="insertSubMatResinIdStock">
		INSERT INTO dw_sub_mat_resin_id_stock
		(
			stock_date,
			material_id,
			mat_type_code,
			sub_mat_type_code,
			unit,
			prev_stock_qty,
			prev_real_stock_qty,
			in_qty,
			out_qty,
			stock_qty,
			real_stock_qty,
			diff_qty,
			confirm_yn,
			charger_id,
			charger_name,
			comments,
			create_date,
			create_user
		)		
		select a.stock_date,
				a.material_id,
				a.mat_type_code,
				a.sub_mat_type_code,
				a.unit,
				a.prev_stock_qty,
				a.prev_real_stock_qty,
				a.in_qty,
				a.out_qty,
				( a.prev_stock_qty + a.in_qty - a.out_qty ) as stock_qty,				
				case when b.status is null or b.status = 'SUMMARY' or b.real_stock_qty is null then 
							( a.prev_real_stock_qty + a.in_qty - a.out_qty ) 
					 else b.real_stock_qty
			    end as real_stock_qty,
				case when b.status is null or b.status = 'SUMMARY' or b.real_stock_qty is null then 
							( a.prev_real_stock_qty + a.in_qty - a.out_qty ) - ( a.prev_stock_qty + a.in_qty - a.out_qty )
					 else ( b.real_stock_qty ) - ( a.prev_stock_qty + a.in_qty - a.out_qty )
			    end as diff_qty,	
			    case when b.status is null or b.status = 'SUMMARY' or b.real_stock_qty is null then 'Y'
				     else b.confirm_yn
				end as confirm_yn,
				case when #{workerId} = 'SYSTEM' and #{workerName} = 'SYS_BATCH' and b.charger_id is not null then b.charger_id
				     else #{workerId}
				end as worker_id,
				case when #{workerId} = 'SYSTEM' and #{workerName} = 'SYS_BATCH' and b.charger_id is not null then b.charger_name
				     else #{workerName}
				end as worker_name,
			    case when b.status is null or b.status = 'SUMMARY' or b.real_stock_qty is null then ''
				     else b.comments
				end as comments,	
				getdate(),
				#{workerId}
		from 		
		( 
			select #{stockDate} as stock_date,
					a.material_id,
					a.mat_type_code,
					a.sub_mat_type_code,
					a.unit,
					sum(case when gubun = 'PRE_STOCK' then qty else 0 end) as prev_stock_qty,
					sum(case when gubun = 'PRE_STOCK' then real_qty else 0 end) as prev_real_stock_qty,
					sum(case when gubun = 'IN' then qty else 0 end) as in_qty,
					sum(case when gubun = 'OUT' then qty else 0 end) as out_qty
			from 
			(
				SELECT 'PRE_STOCK' as gubun, 
						a.material_id,
						a.mat_type_code,
						a.sub_mat_type_code,
						unit,
						sum(stock_qty) as qty,
						sum(real_stock_qty) as real_qty
				FROM dw_sub_mat_resin_id_stock a
				where stock_date = convert(char(8), dateadd(DAY, -1, cast(#{stockDate} as date)), 112)
				  and ( stock_qty > 0  or real_stock_qty > 0 )
				GROUP by material_id, mat_type_code, sub_mat_type_code, unit
				union all
				SELECT 'IN' as gubun, 
						a.material_id,
						a.mat_type_code,
						a.sub_mat_type_code,
						unit,
						sum(in_qty) as qty,
						sum(in_qty) as real_qty
			    FROM dw_sub_mat_resin_in a
				where in_date + in_time between #{stockDate} + '08:00' and convert(char(8), dateadd(DAY, 1, cast(#{stockDate} as date)), 112) + '07:59'
				GROUP by material_id, mat_type_code, sub_mat_type_code, unit
				union all 
				SELECT 'OUT' as gubun, 
						material_id,
						mat_type_code,
						sub_mat_type_code,
						unit,
						sum(out_qty) as qty,
						sum(out_qty) as real_qty
				FROM dw_sub_mat_resin_out a
				where work_date = #{stockDate}
				GROUP BY material_id, mat_type_code, sub_mat_type_code, unit
			) a 
			group by material_id, mat_type_code, sub_mat_type_code, unit
		) a
		left outer join 
		(
			select a.stock_date, a.material_id, a.real_stock_qty, a.confirm_yn, a.comments, b.status, a.charger_id, a.charger_name
			  from ${tempTableName} a 
			left outer join 
			( 
				select * from dw_mat_close_info 
				where stock_date = #{stockDate}
				  and mat_category_code = '30' and mat_type_code='RESIN'
			) b 
			on ( a.stock_date = b.stock_date )
			where a.stock_date = #{stockDate}
		) b 
		on ( a.stock_date = b.stock_date
		     and a.material_id = b.material_id )				
	</insert>
	
	<update id="updateSubMatResinIdStock">
		update dw_sub_mat_resin_id_stock
		   set charger_name = #{workerName}, 
		   	   real_stock_qty = isnull(#{realStockQty},0),
			   diff_qty =  isnull(#{realStockQty},0) - stock_qty,
			   confirm_yn = #{confirmYn},
			   comments = #{comments}
		where stock_date = #{stockDate}
		  and material_id = #{materialId}	
	</update>
	
	<delete id="deleteSubMatResinStock">
		delete from dw_sub_mat_resin_stock
		where stock_date = #{stockDate}
	</delete>
	
	<insert id="insertSubMatResinStock">
		INSERT INTO dw_sub_mat_resin_stock
		(
			stock_date,
			mat_type_code,
			sub_mat_type_code,
			unit,
			prev_stock_qty,
			prev_real_stock_qty,
			in_qty,
			out_qty,
			stock_qty,
			real_stock_qty,
			diff_qty,
			valid_days_past_qty,
			create_date,
			create_user
		)		
		select stock_date,
			mat_type_code,
			sub_mat_type_code,
			unit,
			sum(prev_stock_qty) as prev_stock_qty,
			sum(prev_real_stock_qty) as prev_real_stock_qty,
			sum(in_qty) as in_qty,
			sum(out_qty) as out_qty,
			sum(stock_qty)as stock_qty,
			sum(real_stock_qty) as real_stock_qty,
			sum(diff_qty) as diff_qty,
			sum(valid_days_past_qty) as valid_days_past_qty,
			getdate(),
			#{workerId}
		from dw_sub_mat_resin_id_stock
		where stock_date = #{stockDate}
		group by stock_date, mat_type_code, sub_mat_type_code, unit	
	</insert>	
	
	<insert id="insertSubMatResinEquipOut">
		INSERT INTO dw_sub_mat_resin_equip_out
		(
			stock_date,
			mat_type_code,
			sub_mat_type_code,
			equip_no,
			equip_nm,
			out_qty,
			create_date,
			create_user
		)		
		select work_date,
			  mat_type_code,
			  sub_mat_type_code,
			  equip_no,
			  equip_nm,
			  sum(out_qty) as out_qty,
			  getdate(),
			  #{workerId}  
		from dw_sub_mat_resin_out a
		where work_date = #{stockDate}
		group by work_date, mat_type_code, sub_mat_type_code, equip_no, equip_nm
	</insert>
	
	<delete id="deleteSubMatResinEquipOut">
		delete from dw_sub_mat_resin_equip_out
		where stock_date = #{stockDate}
	</delete>
	
	<!-- Report -->
	<select id="selectSubMatResinMonthReport" resultType="CamelMap">
	WITH BaseData AS (
	        SELECT sub_mat_type_code,
				stock_date,
	            sort_order,
	            gubun,
	            CASE WHEN gubun = 'in_qty' THEN '10'
	                 WHEN gubun = 'out_qty' THEN '20'
	                 WHEN gubun = 'stock_qty' THEN '42'
	                 WHEN gubun = 'real_stock_qty' THEN '41'
	                 WHEN gubun = 'diff_qty' THEN '43'
	            END AS item_order,
	            CASE WHEN gubun = 'in_qty' THEN '입고'
	                 WHEN gubun = 'out_qty' THEN '투입'
	                 ELSE '재고'
	            END AS item_name1,  
	            CASE WHEN gubun = 'in_qty' THEN ''
	                 WHEN gubun = 'out_qty' THEN '계'
	                 WHEN gubun = 'stock_qty' THEN '전산'
	                 WHEN gubun = 'real_stock_qty' THEN '실물'
	                 WHEN gubun = 'diff_qty' THEN '차이'
	            END AS item_name2,        
	            qty
	        FROM 
	        (
	            SELECT 
	                stock_date,
	                sub_mat_type_code,
	                1 AS sort_order,
	                in_qty,
	                out_qty,
	                stock_qty,
	                real_stock_qty,
	                diff_qty
	            FROM dw_sub_mat_resin_stock
	            WHERE stock_date LIKE CONCAT(#{month}, '%')
	            UNION ALL 
	            SELECT 
	                'Total' AS stock_date,
	                sub_mat_type_code,
	                1 AS sort_order,
	                SUM(in_qty) AS in_qty,
	                SUM(out_qty) AS out_qty,
	                SUM(stock_qty) AS stock_qty,
	                SUM(real_stock_qty) AS real_stock_qty,
	                SUM(diff_qty) AS diff_qty
	            FROM dw_sub_mat_resin_stock
	            WHERE stock_date LIKE CONCAT(#{month}, '%')
	            GROUP BY sub_mat_type_code
	        ) a 
	        UNPIVOT ( 
	            qty FOR gubun IN (in_qty, out_qty, stock_qty, real_stock_qty, diff_qty)
	        ) AS b
	    ), 
	    OutData as 
	    (
	    	select sub_mat_type_code,
	    	  	 stock_date,
	    	  	 1 as sort_order,
	    	  	 'out_qty' AS gubun,
	    	  	  25 as item_order,
	    	  	 '투입' as item_name1,
	    	  	 equip_nm as item_name2,
	    	  	 sum(out_qty) as out_qty
			from dw_sub_mat_resin_equip_out
			where stock_date LIKE CONCAT(#{month}, '%')
			group by sub_mat_type_code, stock_date, equip_nm
		),
		ValidData as 
		(
	    	select sub_mat_type_code, 
	    		   'Total' as stock_date,
	    		   1 as sort_order,
	    		   'valid_qty' as gubun,
	    		   '51' as item_order,
	    		   '유효기간' as item_name1,
	    		   convert(varchar, store_valid_days) + '일 이하' as item_name2, 
	    		   sum(in_qty) qty
		    from dw_sub_mat_resin_in a
		    where use_yn = 'N'
		      and DATEDIFF(day, in_date, DATEADD(HOUR, 9, GETUTCDATE())) <![CDATA[ <= ]]> store_valid_days
		    group by sub_mat_type_code, store_valid_days
		    union all 
	    	select sub_mat_type_code, 
		       	   'Total' as stock_date,
		       	   1 as sort_order,
		       	   'valid_qty' as gubun,
	    		   '52' as item_order,
	    		   '유효기간' as item_name1,
	    		   convert(varchar, store_valid_days) + '일 초과' as item_name2, 
	    		   sum(in_qty) qty
		    from dw_sub_mat_resin_in a
		    where use_yn = 'N'
		      and DATEDIFF(day, in_date, DATEADD(HOUR, 9, GETUTCDATE())) <![CDATA[ > ]]> store_valid_days
		    group by sub_mat_type_code, store_valid_days		
		)
	    SELECT 
	        a.*, 	        
	        case when a.item_name1 = '재고' then isnull(b.qty , 0)
	             else null
	        end as pre_stock,
	        c.code_name as sub_mat_type_name
	    FROM 
	    (
	        SELECT 
	            sub_mat_type_code,
	            gubun,
	            sort_order,
	            item_order,
	            item_name1,
	            item_name2,
	            case when item_name1 = '재고' then null 
	                 else ISNULL([Total], 0) 
	             end AS D_Total, 
	             <foreach collection="days" item="item" separator=",">
	             case when gubun = 'valid_qty' then null 
	                  else ISNULL([${item.day}], 0)
	             end D_${item.day}
	             </foreach>
	        FROM 
	        (
	        	select * from BaseData
	        	union all 
	        	select * from OutData
	        	union all 
	        	select * from ValidData
	        ) a
	        PIVOT (
	            SUM(qty) FOR stock_date IN 
	            ([Total],<foreach collection="days" item="item" separator=",">[${item.day}]</foreach>)
	        ) AS pvt
	    ) a 
	    LEFT OUTER JOIN 
	    (
	        SELECT 
	            sub_mat_type_code,
	            gubun,
	            isnull(qty,0) as qty
	        FROM 
	        (
	            SELECT 
	                sub_mat_type_code,
	                prev_stock_qty AS stock_qty,
	                prev_real_stock_qty AS real_stock_qty,
	                prev_real_stock_qty - prev_stock_qty AS diff_qty
	            FROM dw_sub_mat_resin_stock 
	            WHERE stock_date = CONCAT(#{month}, '01')
	            UNION ALL 
	            SELECT 
	                'Total' AS sub_mat_type_code,
	                SUM(prev_stock_qty) AS stock_qty,
	                SUM(prev_real_stock_qty) AS real_stock_qty,
	                SUM(prev_real_stock_qty - prev_stock_qty) AS diff_qty
	            FROM dw_sub_mat_resin_stock 
	            WHERE stock_date = CONCAT(#{month}, '01') 
	            GROUP BY sub_mat_type_code
	        ) a 
	        UNPIVOT (
	            qty FOR gubun IN (stock_qty, real_stock_qty, diff_qty)
	        ) AS b
	    ) b
	    ON (a.sub_mat_type_code = b.sub_mat_type_code 
	        AND a.gubun = b.gubun)
		left outer join ( select code, code_name, sort_order from dw_common_code where maj_code='78' ) c
		on ( a.sub_mat_type_code = c.code )	
		ORDER BY c.sort_order, a.sort_order, sub_mat_type_code, item_order, item_name2
	</select>		

</mapper>